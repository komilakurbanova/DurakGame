# -*- coding: utf-8 -*-
"""BotPython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/183Lmu0QkqBZ40AY4IweRsbmWzDFXxxjr
"""

import logging
import os
import datetime as dt

from telegram import Update,  ReplyKeyboardRemove, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler
from telegram.ext import Filters, CallbackContext

# from classes import Users


logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

UsersData = Users()

menu_markup = ReplyKeyboardMarkup([['Статистика'], ['Правила'], ['Изменить имя'],
                                   ['Играть!']],
                                    one_time_keyboard=True,
                                    resize_keyboard=True,
                                  )

cancel_markup = ReplyKeyboardMarkup([['Отмена']],
                                    one_time_keyboard=True,
                                    resize_keyboard=True,
                                  )

help_text = "Чиллим, играем, пон"


def start_block(update: Update, context: CallbackContext) -> None:
    '''
    Старт диалога.
    Args:
        update (Update)
        context (CallbackContext)
    При "/start" сразу переведёт "stage" в режим ожидания гс, 
    а также отправит шаблоны для разговора
    '''
    user = update.effective_user
    # Проверяет, есть ли он в "БД"
    UsersData.check_user(user)
    stage = UsersData.get_stage(user)
    if stage == 'New':
        name = f"Привет, {user.first_name}!\n Введи своё имя!"
        UsersData.edit_stage(user, "Wait_name")
        update.message.reply_text(name)
    else:
        name = UsersData.get_name(user)
        update.message.reply_text(f"Привет!, {name}")


def main_block(update: Update, context: CallbackContext) -> None:
    '''
    Args:
        update (Update)
        context (CallbackContext)
    Сразу переведёт "stage" в режим ожидания гс, 
    а также отправит шаблоны для разговора
    '''
    user = update.effective_user
    message = update.message.text
    UsersData.check_user(user)
    stage = UsersData.get_stage(user)

    if stage == 'Wait_name':
        name = f"Имя изменено!"
        UsersData.edit_stage(user, "Menu")
        UsersData.edit_name(user, message)
        update.message.reply_text(name, reply_markup=menu_markup)
    
    elif message == "Статистика":
        update.message.reply_text('Тут ничего нет)))', reply_markup=menu_markup)

    elif message == "Правила":
        update.message.reply_text(help_text, reply_markup=menu_markup)

    elif message == "Изменить имя":
        UsersData.edit_stage(user, "Wait_name")
        update.message.reply_text('Пришли новое имя!')

    elif message == "Играть!":
        UsersData.edit_stage(user, "game")
        update.message.reply_text('Тут ничего нет)))', reply_markup=menu_markup)


def main() -> None:
    updater = Updater("")
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start_block))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command,
                                          main_block))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()